"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88],{876:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>y});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),p=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(a.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,y=u["".concat(a,".").concat(m)]||u[m]||f[m]||i;return n?r.createElement(y,l(l({ref:t},s),{},{components:n})):r.createElement(y,l({ref:t},s))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=m;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c[u]="string"==typeof e?e:o,l[1]=c;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5546:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=n(7896),o=(n(2784),n(876));const i={title:"Tooltips"},l=void 0,c={unversionedId:"example-tooltips",id:"version-3.x/example-tooltips",title:"Tooltips",description:"",source:"@site/versioned_docs/version-3.x/example-tooltips.md",sourceDirName:".",slug:"/example-tooltips",permalink:"/docs/v3/example-tooltips",draft:!1,tags:[],version:"3.x",frontMatter:{title:"Tooltips"},sidebar:"docs",previous:{title:"Other layers",permalink:"/docs/v3/example-other-layers"},next:{title:"Layers control",permalink:"/docs/v3/example-layers-control"}},a={},p=[],s={toc:p},u="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useMemo, useState } from 'react'\nimport { MapContainer, TileLayer } from 'react-leaflet'\n\nconst center = [51.505, -0.09]\n\nconst multiPolygon = [\n  [\n    [51.51, -0.12],\n    [51.51, -0.13],\n    [51.53, -0.13],\n  ],\n  [\n    [51.51, -0.05],\n    [51.51, -0.07],\n    [51.53, -0.07],\n  ],\n]\n\nconst rectangle = [\n  [51.49, -0.08],\n  [51.5, -0.06],\n]\n\nfunction TooltipCircle() {\n  const [clickedCount, setClickedCount] = useState(0)\n  const eventHandlers = useMemo(\n    () => ({\n      click() {\n        setClickedCount((count) => count + 1)\n      },\n    }),\n    [],\n  )\n\n  const clickedText =\n    clickedCount === 0\n      ? 'Click this Circle to change the Tooltip text'\n      : `Circle click: ${clickedCount}`\n\n  return (\n    <Circle\n      center={center}\n      eventHandlers={eventHandlers}\n      pathOptions={{ fillColor: 'blue' }}\n      radius={200}>\n      <Tooltip>{clickedText}</Tooltip>\n    </Circle>\n  )\n}\n\nfunction TooltipsExample() {\n  return (\n    <MapContainer center={center} zoom={13}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <TooltipCircle />\n      <CircleMarker\n        center={[51.51, -0.12]}\n        pathOptions={{ color: 'red' }}\n        radius={20}>\n        <Tooltip>Tooltip for CircleMarker</Tooltip>\n      </CircleMarker>\n      <Marker position={[51.51, -0.09]}>\n        <Popup>Popup for Marker</Popup>\n        <Tooltip>Tooltip for Marker</Tooltip>\n      </Marker>\n      <Polygon pathOptions={{ color: 'purple' }} positions={multiPolygon}>\n        <Tooltip sticky>sticky Tooltip for Polygon</Tooltip>\n      </Polygon>\n      <Rectangle bounds={rectangle} pathOptions={{ color: 'black' }}>\n        <Tooltip direction=\"bottom\" offset={[0, 20]} opacity={1} permanent>\n          permanent Tooltip for Rectangle\n        </Tooltip>\n      </Rectangle>\n    </MapContainer>\n  )\n}\n")))}f.isMDXComponent=!0}}]);
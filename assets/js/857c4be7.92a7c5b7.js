"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3994],{876:(e,r,n)=>{n.d(r,{Zo:()=>s,kt:()=>f});var t=n(2784);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function p(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),i=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},s=function(e){var r=i(e.components);return t.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},y=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),y=i(n),f=o,m=y["".concat(c,".").concat(f)]||y[f]||u[f]||a;return n?t.createElement(m,l(l({ref:r},s),{},{components:n})):t.createElement(m,l({ref:r},s))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=y;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,l[1]=p;for(var i=2;i<a;i++)l[i]=n[i];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},5047:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>i});var t=n(7896),o=(n(2784),n(876));const a={title:"Layers control"},l=void 0,p={unversionedId:"example-layers-control",id:"version-3.x/example-layers-control",title:"Layers control",description:"",source:"@site/versioned_docs/version-3.x/example-layers-control.md",sourceDirName:".",slug:"/example-layers-control",permalink:"/docs/v3/example-layers-control",draft:!1,tags:[],version:"3.x",frontMatter:{title:"Layers control"},sidebar:"docs",previous:{title:"Tooltips",permalink:"/docs/v3/example-tooltips"},next:{title:"Panes",permalink:"/docs/v3/example-panes"}},c={},i=[],s={toc:i};function u(e){let{components:r,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import {\n  Circle,\n  FeatureGroup,\n  LayerGroup,\n  LayersControl,\n  MapContainer,\n  Marker,\n  Popup,\n  Rectangle,\n  TileLayer,\n} from 'react-leaflet'\n\nconst center = [51.505, -0.09]\nconst rectangle = [\n  [51.49, -0.08],\n  [51.5, -0.06],\n]\n\nfunction LayersControlExample() {\n  return (\n    <MapContainer center={center} zoom={13}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <LayersControl position=\"topright\">\n        <LayersControl.Overlay name=\"Marker with popup\">\n          <Marker position={center}>\n            <Popup>\n              A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup>\n          </Marker>\n        </LayersControl.Overlay>\n        <LayersControl.Overlay checked name=\"Layer group with circles\">\n          <LayerGroup>\n            <Circle\n              center={center}\n              pathOptions={{ fillColor: 'blue' }}\n              radius={200}\n            />\n            <Circle\n              center={center}\n              pathOptions={{ fillColor: 'red' }}\n              radius={100}\n              stroke={false}\n            />\n            <LayerGroup>\n              <Circle\n                center={[51.51, -0.08]}\n                pathOptions={{ color: 'green', fillColor: 'green' }}\n                radius={100}\n              />\n            </LayerGroup>\n          </LayerGroup>\n        </LayersControl.Overlay>\n        <LayersControl.Overlay name=\"Feature group\">\n          <FeatureGroup pathOptions={{ color: 'purple' }}>\n            <Popup>Popup in FeatureGroup</Popup>\n            <Circle center={[51.51, -0.06]} radius={200} />\n            <Rectangle bounds={rectangle} />\n          </FeatureGroup>\n        </LayersControl.Overlay>\n      </LayersControl>\n    </MapContainer>\n  )\n}\n")))}u.isMDXComponent=!0}}]);
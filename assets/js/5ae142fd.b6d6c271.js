"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7545],{876:function(n,e,t){t.d(e,{Zo:function(){return l},kt:function(){return m}});var r=t(2784);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var u=r.createContext({}),c=function(n){var e=r.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},l=function(n){var e=c(n.components);return r.createElement(u.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,u=n.parentName,l=s(n,["components","mdxType","originalType","parentName"]),d=c(t),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return t?r.createElement(f,i(i({ref:e},l),{},{components:t})):r.createElement(f,i({ref:e},l))}));function m(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=n,s.mdxType="string"==typeof n?n:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},18:function(n,e,t){t.r(e),t.d(e,{assets:function(){return l},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=t(7896),o=t(1461),a=(t(2784),t(876)),i=["components"],s={title:"View bounds"},u=void 0,c={unversionedId:"example-view-bounds",id:"example-view-bounds",title:"View bounds",description:"Click a rectangle to fit the map to its bounds",source:"@site/docs/example-view-bounds.md",sourceDirName:".",slug:"/example-view-bounds",permalink:"/docs/example-view-bounds",tags:[],version:"current",frontMatter:{title:"View bounds"},sidebar:"docs",previous:{title:"Draggable Marker",permalink:"/docs/example-draggable-marker"},next:{title:"Animated panning",permalink:"/docs/example-animated-panning"}},l={},p=[],d={toc:p};function m(n){var e=n.components,t=(0,o.Z)(n,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Usage")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Click a rectangle to fit the map to its bounds"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live noInline",live:!0,noInline:!0},"const innerBounds = [\n  [49.505, -2.09],\n  [53.505, 2.09],\n]\nconst outerBounds = [\n  [50.505, -29.09],\n  [52.505, 29.09],\n]\n\nconst redColor = { color: 'red' }\nconst whiteColor = { color: 'white' }\n\nfunction SetBoundsRectangles() {\n  const [bounds, setBounds] = useState(outerBounds)\n  const map = useMap()\n\n  const innerHandlers = useMemo(\n    () => ({\n      click() {\n        setBounds(innerBounds)\n        map.fitBounds(innerBounds)\n      },\n    }),\n    [map],\n  )\n  const outerHandlers = useMemo(\n    () => ({\n      click() {\n        setBounds(outerBounds)\n        map.fitBounds(outerBounds)\n      },\n    }),\n    [map],\n  )\n\n  return (\n    <>\n      <Rectangle\n        bounds={outerBounds}\n        eventHandlers={outerHandlers}\n        pathOptions={bounds === outerBounds ? redColor : whiteColor}\n      />\n      <Rectangle\n        bounds={innerBounds}\n        eventHandlers={innerHandlers}\n        pathOptions={bounds === innerBounds ? redColor : whiteColor}\n      />\n    </>\n  )\n}\n\nrender(\n  <MapContainer bounds={outerBounds} scrollWheelZoom={false}>\n    <TileLayer\n      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    />\n    <SetBoundsRectangles />\n  </MapContainer>,\n)\n")))}m.isMDXComponent=!0}}]);